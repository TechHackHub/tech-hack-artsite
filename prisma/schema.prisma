generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Artist {
  id          String   @id @default(uuid())
  avatar      String
  name        String
  born        String
  educations  String[] @default([])
  description String
  email       String   @unique
  password    String
  phone       String?
  facebookUrl String?
  IGUrl       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Material {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Artwork   Artwork? @relation(fields: [artworkId], references: [id], onDelete: Restrict)
  artworkId String?
}

model Subject {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Artwork   Artwork[]
}

model Artwork {
  id             String     @id @default(uuid())
  title          String
  materials      Material[]
  subject        Subject?   @relation(fields: [subjectId], references: [id], onDelete: Restrict)
  width          Float
  height         Float
  depth          Float
  description    String     @default("")
  completedAt    DateTime
  publish        Boolean
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  subjectId      String?
  showOnCarousel Boolean    @default(false)
}

model Achievement {
  id           String                  @id @default(uuid())
  title        String
  year         DateTime
  category     AchievementCategory
  subcategory  AchievementSubcategory?
  organization String                  @default("")
  location     String                  @default("")
  publish      Boolean
  createdAt    DateTime                @default(now())
  updatedAt    DateTime                @updatedAt
}

enum AchievementCategory {
  Exhibition
  Award
  Collection
}

enum AchievementSubcategory {
  Solo
  Group
}
